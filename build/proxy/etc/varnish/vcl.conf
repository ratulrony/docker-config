#
# This is a basic VCL configuration file for varnish.  See the vcl(7)
# man page for details on VCL syntax and semantics.
#
# $Id: vcl.conf 1200 2006-10-19 09:21:42Z des $
#

backend thumbsniper_nginx_api {
	.host = "thumbsniper-nginx-api.docker";
	.port = "80";
}

backend thumbsniper_nginx_images {
	.host = "thumbsniper-nginx-images.docker";
	.port = "80";
}

backend thumbsniper_nginx_panel {
	.host = "thumbsniper-nginx-panel.docker";
	.port = "80";
}

sub vcl_recv {
	# pass mode can't handle POST (yet)
	if (req.request == "POST") {
		return(pipe);
	}

	# don't bother caching large files
	if(req.url ~ "\.(pdf|mp3|flv|mov|mp4|mpg|mpeg|avi|dmg)") {
		return(pipe);
	}

	# force lookup even when cookies are present
	if (req.request == "GET" && req.http.cookie) {
		return(lookup);
	}


	# THUMBSNIPER

	if(req.http.host ~ "^(?i)api\.")
	{
		set req.backend = thumbsniper_nginx_api;
	}

	if(req.http.host ~ "^(?i)img[0-9]*\.")
	{
		set req.backend = thumbsniper_nginx_images;
	}

	if(req.http.host ~ "^(?i)panel\.")
	{
		set req.backend = thumbsniper_nginx_panel;
	}

	if(req.http.host ~ "^(?i)img[0-9]*\.")
	{
		set req.http.host = regsub(req.http.host, "^(?i)img[0-9]*\.","img\.");
	}

	if(req.http.host ~ "^(?i)api\." && ! req.url ~ "^/image/")
	{
		return(pass);
	}

#	if(req.http.host ~ "^(?i)panel\.")
#	{
#		set req.backend = thumbsniper_nginx_api;
#		return(pass);
#	}
}


# Called before a cached object is delivered to the client
sub vcl_deliver
{
	# insert HIT or MISS headers for some client-side debugging
	if(obj.hits > 0)
	{
		set resp.http.X-Cache = "HIT";
		set resp.http.X-Cache-Hits = obj.hits;
	}else
	{
		set resp.http.X-Cache = "MISS";
	}

	# see http://varnish-cache.org/wiki/VCLExampleLongerCaching
	if(resp.http.magicmarker)
	{
		/* Remove the magic marker */
		unset resp.http.magicmarker;

		/* By definition we have a fresh object */
		set resp.http.age = "0";
	}

	return(deliver);
}

